  1.  Write a program that reads characters from the keyboard until a period is received. 
      Have the program count the number of spaces. Report the total at the end of the program.
        - [readChar.java]

  2.  Show the general form of the if-else-if ladder.
        - if <condition>
            <block>
          else if <condition>
            <block>
          ...
          else
            <block>

  3.  Given
    if(x < 10)
      if(y > 100) {
        if(!done) x = z;
        else y = z;
      }
      else System.out.println("error"); // what if?
    to what if does the last else associate?
      - (y > 100)

  4.  Show the for statement for a loop that counts from 1000 to 0 by â€“2.
      - for( int x = 1000 ; x >= 0 ; x-- ) { <block> }

  5.  Is the following fragment valid?
    for(int i = 0; i < num; i++)
      sum += i;
    count = i;
      - Count cannot reference "i". (Assuming "sum" and "num" is defined)

  6.  Explain what break does. Be sure to explain both of its forms.
      - Move the execution to either:
          After the current loop
          or, to the beginning of a named loop

  7.  In the following fragment, after the break statement executes, what is displayed?
    for(i = 0; i < 10; i++) {
      while(running) {
        if(x<y) break;
          // ...
      }
      System.out.println("after while");
    }
    System.out.println("After for");
      - "After while"

  8.  What does the following fragment print?
    for(int i = 0; i<10; i++) {
      System.out.print(i + " ");
      if((i%2) == 0) continue;
      System.out.println();
    } 
      - "0 1 
		2 3
		4 5
		6 7
		8 9"

  9.  The iteration expression in a for loop need not always alter the loop control variable by a
fixed amount. Instead, the loop control variable can change in any arbitrary way. Using this
concept, write a program that uses a for loop to generate and display the progression 1, 2, 4,
8, 16, 32, and so on.
      - "for( int i = 1 ; i > 0 ; i += i ) { System.out.print( i + ", " ); }"

  10.   The ASCII lowercase letters are separated from the uppercase letters by 32. Thus, to convert
a lowercase letter to uppercase, subtract 32 from it. Use this information to write a program
that reads characters from the keyboard. Have it convert all lowercase letters to uppercase,
and all uppercase letters to lowercase, displaying the result. Make no changes to any other
character. Have the program stop when the user enters a period. At the end, have the program
display the number of case changes that have taken place.
      - [charChange.java]

  11.   What is an infinite loop?
      - "A loop that does not exit."

  12.   When using break with a label, must the label be on a block that contains the break?
      - Nope.
