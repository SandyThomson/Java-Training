package com.selftest;

import org.junit.Assert;
import org.junit.Test;

public class OpenFileBytesTest {

	@Test
	public void testOpenFile() throws Exception {
		OpenFileBytes of = new OpenFileBytes();
		byte[] actual = of.openFile("src/com/selftest/OpenFileBytes.java");

		byte[] expected = { 112, 97, 99, 107, 97, 103, 101, 32, 99, 111, 109,
				46, 115, 101, 108, 102, 116, 101, 115, 116, 59, 13, 10, 13, 10,
				105, 109, 112, 111, 114, 116, 32, 106, 97, 118, 97, 46, 105,
				111, 46, 66, 121, 116, 101, 65, 114, 114, 97, 121, 79, 117,
				116, 112, 117, 116, 83, 116, 114, 101, 97, 109, 59, 13, 10,
				105, 109, 112, 111, 114, 116, 32, 106, 97, 118, 97, 46, 105,
				111, 46, 70, 105, 108, 101, 59, 13, 10, 105, 109, 112, 111,
				114, 116, 32, 106, 97, 118, 97, 46, 105, 111, 46, 70, 105, 108,
				101, 73, 110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 59,
				13, 10, 105, 109, 112, 111, 114, 116, 32, 106, 97, 118, 97, 46,
				105, 111, 46, 73, 79, 69, 120, 99, 101, 112, 116, 105, 111,
				110, 59, 13, 10, 13, 10, 112, 117, 98, 108, 105, 99, 32, 99,
				108, 97, 115, 115, 32, 79, 112, 101, 110, 70, 105, 108, 101,
				66, 121, 116, 101, 115, 32, 123, 13, 10, 13, 10, 9, 112, 117,
				98, 108, 105, 99, 32, 98, 121, 116, 101, 91, 93, 32, 111, 112,
				101, 110, 70, 105, 108, 101, 40, 83, 116, 114, 105, 110, 103,
				32, 102, 105, 108, 101, 110, 97, 109, 101, 41, 123, 13, 10, 9,
				9, 13, 10, 9, 9, 116, 114, 121, 40, 32, 70, 105, 108, 101, 73,
				110, 112, 117, 116, 83, 116, 114, 101, 97, 109, 32, 102, 105,
				115, 32, 61, 32, 110, 101, 119, 32, 70, 105, 108, 101, 73, 110,
				112, 117, 116, 83, 116, 114, 101, 97, 109, 40, 110, 101, 119,
				32, 70, 105, 108, 101, 40, 102, 105, 108, 101, 110, 97, 109,
				101, 41, 41, 59, 13, 10, 9, 9, 9, 9, 66, 121, 116, 101, 65,
				114, 114, 97, 121, 79, 117, 116, 112, 117, 116, 83, 116, 114,
				101, 97, 109, 32, 111, 115, 32, 61, 32, 110, 101, 119, 32, 66,
				121, 116, 101, 65, 114, 114, 97, 121, 79, 117, 116, 112, 117,
				116, 83, 116, 114, 101, 97, 109, 40, 41, 59, 41, 32, 123, 13,
				10, 9, 9, 9, 13, 10, 9, 9, 9, 98, 121, 116, 101, 91, 93, 32,
				98, 117, 102, 102, 101, 114, 32, 61, 32, 110, 101, 119, 32, 98,
				121, 116, 101, 91, 49, 48, 50, 52, 93, 59, 13, 10, 9, 9, 9,
				119, 104, 105, 108, 101, 32, 40, 102, 105, 115, 46, 114, 101,
				97, 100, 40, 98, 117, 102, 102, 101, 114, 41, 32, 33, 61, 32,
				45, 49, 41, 32, 111, 115, 46, 119, 114, 105, 116, 101, 40, 98,
				117, 102, 102, 101, 114, 41, 59, 13, 10, 13, 10, 9, 9, 9, 114,
				101, 116, 117, 114, 110, 32, 111, 115, 46, 116, 111, 66, 121,
				116, 101, 65, 114, 114, 97, 121, 40, 41, 59, 13, 10, 9, 9, 9,
				13, 10, 9, 9, 125, 32, 99, 97, 116, 99, 104, 32, 40, 73, 79,
				69, 120, 99, 101, 112, 116, 105, 111, 110, 32, 101, 41, 32,
				123, 13, 10, 9, 9, 9, 83, 121, 115, 116, 101, 109, 46, 111,
				117, 116, 46, 112, 114, 105, 110, 116, 108, 110, 40, 34, 75,
				65, 66, 79, 79, 77, 34, 41, 59, 13, 10, 9, 9, 9, 101, 46, 112,
				114, 105, 110, 116, 83, 116, 97, 99, 107, 84, 114, 97, 99, 101,
				40, 41, 59, 13, 10, 9, 9, 125, 13, 10, 9, 9, 114, 101, 116,
				117, 114, 110, 32, 110, 117, 108, 108, 59, 32, 47, 47, 32, 101,
				114, 107, 13, 10, 9, 125, 13, 10, 13, 10, 125, 13, 10, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 0 };

		Assert.assertArrayEquals(expected, actual);
	}

}
